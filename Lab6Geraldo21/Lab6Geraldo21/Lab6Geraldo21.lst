Microsoft (R) Macro Assembler Version 14.16.27035.0	    02/22/20 14:41:11
AddTwo.asm						     Page 1 - 1


				; mov and xchg: rearrange the values to be 3,1,2, you could
				; Lab 6

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
 00000000 00000001			array DWORD 1,2,3
	   00000002
	   00000003
					;=========================================
					;	DWORD = 4 bytes
					;
					;     00   01  02    03
					;	+----+----+----+----+
					;	| 01 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;
					;     04   05   06   07
					;	+----+----+----+----+
					;	| 02 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;
					;     08   09   10   11
					;	+----+----+----+----+
					;	| 03 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;=========================================
					
 00000000			.code
 00000000			main proc
 00000000  B8 00000000			mov eax,0h
 00000005  BB 00000000			mov ebx,0h

 0000000A  A1 00000000 R		mov eax,array
					;===================
					; EAX = 00 00 00 01
					;               <==
					;===================

					;xchg eax,[array+4]
					;==================================
					; BEFORE
					;    EAX       = 00 00 00 01
					;    [array+4] = 02 00 00 00
					;
					; AFTER
					;    EAX       = 00 00 00 02
					;    [array+4] = 01 00 00 00
					;==================================

					;xchg eax,[array+8]
					;==================================
					; BEFORE
					;    EAX       = 00 00 00 02
					;    [array+8] = 03 00 00 00
					;
					; AFTER
					;    EAX       = 00 00 00 03
					;    [array+8] = 02 00 00 00
					;==================================
					
					;xchg array,eax
				    ;==================================
					; BEFORE
					;    EAX       = 00 00 00 03
					;    [array]   = 01 00 00 00
					;
					; AFTER
					;    EAX     = 00 00 00 01
					;    [array] = 03 00 00 00
					;==================================

					;==================================
					;           RESULT   
					; 
					;     00   01  02    03
					;	+----+----+----+----+
					;	| 03 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;
					;     04   05   06   07
					;	+----+----+----+----+
					;	| 01 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;
					;     08   09   10   11
					;	+----+----+----+----+
					;	| 02 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;=========================================

					;====================================================================
					; FIX = exchange array[8], array[4]
					;    XCHG mem1, mem2   ; Illegal, can't exchange memory locations!
					;===================================================================
 0000000F  87 05 00000004 R		xchg eax,[array+4]
 00000015  87 05 00000008 R		xchg eax,[array+8]
 0000001B  87 05 00000004 R		xchg eax,[array+4]

					;==================================
					;      RESULT AFTER FIX
					; 
					;     00   01  02    03
					;	+----+----+----+----+
					;	| 03 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;
					;     04   05   06   07
					;	+----+----+----+----+
					;	| 02 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;
					;     08   09   10   11
					;	+----+----+----+----+
					;	| 01 | 00 | 00 | 00 |
					;	+----+----+----+----+
					;=========================================
					
					invoke ExitProcess,0
 00000021  6A 00	   *	    push   +000000000h
 00000023  E8 00000000 E   *	    call   ExitProcess

 00000028			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27035.0	    02/22/20 14:41:11
AddTwo.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000000C DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000028 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000028 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
array  . . . . . . . . . . . . .	DWord	 00000000 _DATA	

	   0 Warnings
	   0 Errors
